rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Allow each authenticated user to read/write their own profile
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Chat sessions owned by the user
    match /chatSessions/{sessionId} {
      // Allow users to create new sessions and read/write their own sessions
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;

      // Documents sub-collection under a session
      match /documents/{documentId} {
        allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
        allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      }
    }

    // IQ Test Results
    match /iqTestResults/{resultId} {
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Allow users to read/write any document they own (fallback rule)
    match /{document=**} {
      allow read, write: if request.auth != null && 
        (resource.data.userId == request.auth.uid || 
         request.resource.data.userId == request.auth.uid);
    }
  }
}
